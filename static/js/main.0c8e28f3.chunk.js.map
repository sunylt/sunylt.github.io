{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["TOKENS","50497","3756934","9490820","9622452","49681","1712771","8520497","6771938","49653","App","state","isLoading","priceList","records","rate","current","mode","localStorage","getItem","filterData","index","data","_this","setState","checkAll","forEach","r","onChang","e","target","value","setItem","this","JSON","parse","fetchExchangeRecords","then","res","stringify","syncTicker","handleKeyboard","fethHistoryPrice","fueldata","aedata","item","date","Date","time","concat","getFullYear","getMonth","getDate","getHours","getMinutes","push","parseInt","ae","fuel","document","body","addEventListener","which","multiAction","ids","ws","WebSocket","onmessage","info","tick","symbol","price","change","percent_change_24h","onopen","send","event","params","Object","keys","map","id","fetch","json","token","interval","i","dt","endTime","getTime","_this2","_this$state","remain","assetsExchanged","split","tokenName","amount","x","completed","tbenefit","rows","amountToAE","AE","Math","abs","benefit","react_default","a","createElement","key","title","style","paddingLeft","color","App_CheckBox","checked","onClick","exchangedValue","priceSyncCount","needPrice","tokenSymbol","priceSyncOK","canShowPrice","window","reverse","className","es_radio","Group","onChange","Button","react","border","cellPadding","cellSpacing","width","align","App_PriceView","App_Loading","toFixed","App_Line","ref","App_ExchangeAmount","Component","activedBox","Line","_ref","h","d","height","console","log","backgroundColor","querySelector","innerHTML","ExchangeAmount","_ref2","CheckBox","_ref3","_ref3$onClick","select","PriceView","_ref4","Loading","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c8e28f3.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {  Radio } from 'antd';\n//import logo from './logo.svg';\n\nimport './App.css';\n\n//const { TabPane } = Tabs;\n\n//const DEFAULT_AMOUNT = 28000 + 46400\n\nconst TOKENS = {\n  50497: 'AE',\n  3756934: 'LEND',\n  9490820: 'KEY',\n  9622452: 'LET',\n  49681: 'SNT',\n  1712771: 'FUEL',\n  8520497: 'MTX',\n  6771938: 'DEW',\n  49653: 'BTC',\n}\nconst RED_COLOR = '#ea2870'\nconst GREEN_COLOR = '#70a700'\n\nclass App extends Component {\n\n  state = {\n    isLoading: false,\n    priceList: {},\n    records: [],\n    rate: [],\n    current: 'FULE',\n    mode: localStorage.getItem('tabCurrent') || 'a'\n  }\n\n  componentDidMount() {\n    const  _this = this\n    const data = localStorage.getItem('data');\n    const priceList = localStorage.getItem('priceList')\n\n    if (data) {\n      this.setState({\n        records: JSON.parse(data)\n      })\n    }\n    if (priceList) {\n      this.setState({\n        priceList: JSON.parse(priceList)\n      })\n    }\n    this.fetchExchangeRecords().then(res => {\n      const data = res.data\n      localStorage.setItem('data', JSON.stringify(data))\n      _this.setState({\n        records: data\n      })\n      _this.syncTicker()\n    })\n\n    //this.login()\n    this.handleKeyboard()\n    this.fethHistoryPrice('FUELBTC', '1d').then(fueldata => {\n      _this.fethHistoryPrice('AEBTC', '1d').then(aedata => {\n        const data = []\n        aedata.forEach((item, index) => {\n          const date = new Date(item[0])\n          const time = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}`\n          data.push({\n            time: time,\n            rate: parseInt(item[1]*24000/fueldata[index][1]),\n            ae: item,\n            fuel: fueldata[index]\n          })\n        })\n        _this.setState({\n          rate: data\n        })\n\n      })\n    })\n  }\n\n  handleKeyboard(){\n    const _this = this\n    document.body.addEventListener('keydown', function(e) {\n      if (e.which === 16) {\n        _this.multiAction = true\n      }\n    })\n    document.body.addEventListener('keyup', function(e) {\n      if (e.which === 16) {\n        _this.multiAction = false\n      }\n    })\n  }\n\n  syncTicker(ids) {\n    const _this = this\n    const ws = new WebSocket('wss://ws.cn-east.mytokenapi.com/ticker')\n    ws.onmessage = function(e) {\n      const data = JSON.parse(e.data)\n      const info = data.data\n      if (info && info.tick) {\n        const priceList = _this.state.priceList\n        priceList[info.tick.symbol] = {\n          price: info.tick.price,\n          change: info.tick.percent_change_24h\n        }\n        _this.setState({\n          priceList\n        })\n        localStorage.setItem('priceList', JSON.stringify(priceList))\n      }\n    }\n    ws.onopen = function() {\n      ws.send(\n        JSON.stringify({\n          event:\"ticker\",\n          params:{\n            ids: Object.keys(TOKENS).map(id => +id)\n          }\n        })\n      )\n    }\n  }\n\n  fetchExchangeRecords() {\n    return fetch('https://www.easy-mock.com/mock/59d892fd9d342f449f303370/app/records').then(res => res.json())\n  }\n\n  fetchHistoryFuelToBtcPrice() {\n    return fetch('https://www.easy-mock.com/mock/59d892fd9d342f449f303370/app/fuelbtc').then(res => res.json())\n  }\n\n  fethHistoryPrice(token, interval){\n    const count = 365\n    const i = (interval == '1d' || interval == '1D' ? 24 : parseInt(interval))\n    const dt = new Date()\n    const endTime = new Date(dt.getFullYear() + '/' + (dt.getMonth() + 1) + '/' + dt.getDate()).getTime()\n    const startTime = endTime - count * i * 3600 * 1000 \n    return fetch('https://api.webmooc.com:5060/api/v1/klines?symbol=' + token +'&interval=' + interval + '&limit='+ count +'&startTime='+ startTime +'&endTime=' + endTime).then(res => res.json())\n  }\n\n  fetchHistoryAeToBtcPrice() {\n    return fetch('https://www.easy-mock.com/mock/59d892fd9d342f449f303370/app/aebtc').then(res => res.json())\n  }\n\n  filterData = (index) => {\n    const data = this.state.records\n    if (data[index][4] !== false) {\n      data[index][4] = false\n    } else {\n      data[index][4] = true\n    }\n\n    this.setState({\n      records: data\n    }) \n  }\n\n  checkAll = () => {\n    const data = this.state.records\n    data.forEach(r => {\n      r[4] = true\n    })\n    this.setState({\n      records: data\n    })\n  }\n\n  onChang = (e) => {\n    const mode = e.target.value;\n    this.setState({ mode });\n    localStorage.setItem('tabCurrent', mode)\n  }\n\n  render() {\n    const _this = this\n    const { priceList, records, mode, rate } = this.state\n    let remain = 0\n    const assetsExchanged = {}\n    records.forEach((data, index) => {\n    \n      if (data[4] === false) {\n        return\n      }\n      remain += parseInt(data[1])\n\n      // 如果有兑换记录\n      if (data[2]) {\n        const res = data[2].split(/\\d+/)\n        //const isAdd = res[0] === '+'\n        const tokenName = res[1]\n        const amount = parseInt(data[2])\n        if (typeof assetsExchanged[tokenName] === 'undefined') {\n          assetsExchanged[tokenName] = amount\n        } else {\n          assetsExchanged[tokenName] = assetsExchanged[tokenName] + amount\n        }\n        if (assetsExchanged[tokenName] === 0) {\n          records.forEach((r, i) => {\n            let x = r[2].split(/\\d+/)\n            if (i <= index && res[1] === x[1]) {\n              r.completed = true\n            }\n          })\n        }\n      }\n    })\n\n    let tbenefit = 0\n\n    const rows = records.map((data, index) => {\n      const res = data[2].split(/\\d+/)\n      const tokenName = res[1]\n      const amount = parseInt(data[2])\n      let amountToAE = ''\n      if (priceList[tokenName] && priceList.AE) {\n        amountToAE = parseInt((Math.abs(amount) * priceList[tokenName].price)/priceList.AE.price)\n      }\n      const benefit = amountToAE && !data.completed ? (data[1] < 0 && amountToAE - Math.abs(data[1]) > 0  ? '+' : '') + (amountToAE - Math.abs(data[1])) : ''\n      if (benefit) {\n        tbenefit += parseInt(benefit)\n      }\n      return (\n      <tr key={index}>\n        <td>{data[0]}</td>\n        <td>{data[1]}</td>\n        <td title={amountToAE ? `≈${amountToAE}AE` : ''}>{data[2]}</td>\n        <td>\n          <span style={{paddingLeft: '3px', color: data[1] < 0 && amountToAE - Math.abs(data[1]) > 0  ? GREEN_COLOR : RED_COLOR}}>\n            { benefit }\n          </span>\n          <CheckBox  checked={data[4] !== false ? true: false} onClick={() => _this.filterData(index)} />\n        </td>\n        <td>{data[3]}</td>\n    </tr>)})\n\n    let exchangedValue = 0\n    let priceSyncCount = 0\n    let needPrice = 0\n    Object.keys(assetsExchanged).forEach(tokenSymbol => {\n      if (assetsExchanged[tokenSymbol] > 0) {\n        needPrice +=1\n        if (this.state.priceList[tokenSymbol]) {\n          exchangedValue += assetsExchanged[tokenSymbol] * this.state.priceList[tokenSymbol].price\n          priceSyncCount += 1\n        }\n      }\n    })\n\n    const priceSyncOK = priceSyncCount === needPrice\n    const canShowPrice = priceList.AE && priceSyncOK\n    //const btc = priceList.BTC && canShowPrice ? (exchangedValue + remain * priceList.AE)/priceList.BTC : ''\n\n    window.priceList = priceList\n    window.assetsExchanged = assetsExchanged\n    window.records = records\n\n    // 倒叙显示操作\n    rows.reverse()\n    \n    return (\n      <div className=\"App\">\n        {/* <div className=\"login\">\n          <input type=\"password\" placeholder=\"请输入密码\" />\n        </div> */}\n        <div className=\"App-header\">\n        <Radio.Group onChange={this.onChang} value={mode}>\n          <Radio.Button value=\"a\">行情</Radio.Button>\n          <Radio.Button value=\"b\">操作</Radio.Button>\n        </Radio.Group>\n        </div>\n        \n        <div className=\"container\">\n        {\n          mode === 'a' ?\n\n          <Fragment>\n            <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" width=\"88%\" align=\"center\" className=\"exchangedAssets\">\n              <thead>\n                <tr>\n                  <th width=\"18%\">TOKEN</th>\n                  <th width=\"20%\">CHANGE(24H)</th>\n                  <th width=\"20%\">PRICE</th>                \n                  <th width=\"22%\">AMOUNT</th>\n                  <th width=\"20%\">BANLANCE</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  Object.keys(assetsExchanged).map(token => {\n                      return assetsExchanged[token] > 0 ? <tr key={token}><td>{token}</td><td>{priceList[token] ? <Fragment><PriceView price={priceList[token].change} />%</Fragment> : <Loading />}</td><td>{ priceList[token] ? '￥' + priceList[token].price.toFixed(5) : <Loading /> }</td><td>{assetsExchanged[token]}</td><td>{priceList[token] ? '￥' + parseInt(priceList[token].price.toFixed(5) * assetsExchanged[token]) : <Loading />}</td></tr> : null\n                    })\n                }\n                <tr>\n                  <td>AE</td><td>{priceList.AE ? <Fragment><PriceView price={priceList.AE.change} />%</Fragment> : <Loading />}</td><td>{ priceList.AE ? '￥' + priceList.AE.price.toFixed(5) : <Loading /> }</td><td>{ remain }</td><td>{priceList.AE ? '￥' + parseInt(priceList.AE.price.toFixed(5) * remain) : <Loading />}</td>\n                </tr>\n              </tbody>\n          </table>\n          <div id=\"mountNode\">\n              {\n                rate.map((item, index) => <Line key={index} value={item.rate} time={item.time} data={{ae: item.ae, fuel: item.fuel}} /> )\n              }\n              <div className=\"data-detail\" ref=\"detail\"></div>\n          </div>\n          <div className=\"changes-list\">\n              <ExchangeAmount priceList={priceList} token=\"FUEL\" />\n              <ExchangeAmount priceList={priceList} token=\"LEND\" />\n              <ExchangeAmount priceList={priceList} token=\"SNT\" />\n              <ExchangeAmount priceList={priceList} token=\"KEY\" />\n          </div>\n        </Fragment>\n        \n        :\n\n        <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" width=\"88%\" align=\"center\" className=\"exchange-list\">\n          <colgroup>\n            <col />\n            <col />\n            <col />\n            <col />\n            <col />\n          </colgroup>\n          <thead>\n            <tr>\n              <th width=\"18%\">DATE</th>\n              <th width=\"20%\">AE</th>\n              <th width=\"20%\">TOKEN</th>\n              <th width=\"22%\">CHECK<CheckBox checked={true} onClick={this.checkAll} /></th>\n              <th width=\"20%\">NOTE</th>\n            </tr>\n          </thead>\n          <tbody>\n            { rows }\n          </tbody>\n        </table>\n\n        }\n\n        <div className=\"status-bar\">\n      \n        \n              <span className=\"ae-total\"><b>{remain}</b> AE</span>\n              <span><b>{canShowPrice ? remain + parseInt(exchangedValue/priceList.AE.price) : <Loading />}</b> AE</span>\n              <span><b>{canShowPrice ? \n                <Fragment>\n                  <PriceView price={tbenefit} />\n                </Fragment>\n                :\n                 <Loading />\n                 /*\n                 // 总额\n                remain + parseInt(exchangedValue/priceList.AE.price)\n                 // 总收益\n                 (remain + parseInt(exchangedValue/this.state.priceList.AE.price) - DEFAULT_AMOUNT)\n                 */\n              }</b> AE</span>\n          \n        </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nlet activedBox = null\nconst Line = ({value, time, data}) => {\n  const defaultHeight = 100\n  const h = defaultHeight * value / 1000000\n  const d = new Date(data.ae[0])\n  \n  return (\n    <div style={{height:h}} time={time} onClick={(e) => {\n      //e.target.style.backgroundColor = 'red'\n      console.log(data)\n      if (activedBox) activedBox.style.backgroundColor = '';\n      e.target.style.backgroundColor = '#ca2626';\n      activedBox = e.target\n      document.querySelector('.data-detail').innerHTML = `\n      <p>${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()}</p>\n      <p>AE/BTC: ${data.ae[1]}</p>\n      <p>FUEL/BTC: ${data.fuel[1]}</p>\n      <p>24000 AE ≈ ${parseInt(24000 * data.ae[1]/data.fuel[1])} FUEL</p>\n      `\n    }}></div>\n  )\n}\n\nconst ExchangeAmount = ({priceList, token}) => {\n  const BASE_AMOUNT = {\n    FUEL: 1250000,\n    LEND: 1250000,\n    SNT: 520000,\n    KEY: 4200000\n  }\n  const tokens = () => parseInt(priceList.AE.price * 24000/priceList[token].price)\n  //const aes = () => ((BASE_AMOUNT[token] - tokens()) * priceList[token].price)/priceList.AE.price\n  return <div>24000 AE ≈ <span>\n    {\n      priceList.AE && priceList[token] ?\n        tokens()\n        :\n        <Loading />\n    }</span>{token}</div>\n}\n\nconst CheckBox = ({checked, onClick = ()=> {}}) => {\n  return (\n    checked ? \n      <span className=\"ui-checkbox\" select=\"true\" onClick={onClick}></span>\n      :\n      <span className=\"ui-checkbox\" onClick={onClick}></span>\n    )\n}\n\nconst PriceView = ({price}) => {\n  return <span style={{color: +price < 0 ? RED_COLOR : GREEN_COLOR}}>{ price }</span>\n}\n\nconst Loading = () => (\n  <div className=\"loadEffect\">\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n\n    window.addEventListener('activated', () => {\n      alert(1)\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}