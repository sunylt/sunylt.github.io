{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["TOKENS","50497","3756934","9490820","9622452","49681","1712771","8520497","6771938","49653","App","state","isLoading","priceList","records","filterData","index","data","_this","setState","checkAll","forEach","r","this","fetchExchangeRecords","then","res","localStorage","setItem","JSON","stringify","syncTicker","handleKeyboard","document","body","addEventListener","e","which","multiAction","ids","ws","WebSocket","onmessage","info","parse","tick","symbol","price","change","percent_change_24h","onopen","send","event","params","Object","keys","map","id","fetch","json","_this2","_this$state","remain","assetsExchanged","parseInt","split","tokenName","amount","i","x","completed","tbenefit","rows","amountToAE","AE","Math","abs","benefit","react_default","a","createElement","key","title","concat","style","paddingLeft","color","App_CheckBox","checked","onClick","exchangedValue","priceSyncCount","needPrice","tokenSymbol","priceSyncOK","canShowPrice","window","className","border","cellPadding","cellSpacing","width","align","App_Loading","token","App_PriceView","toFixed","Component","CheckBox","_ref","_ref$onClick","select","PriceView","_ref2","Loading","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6bc83df.chunk.js","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n\nconst DEFAULT_AMOUNT = 28000 + 46400\nconst TOKENS = {\n  50497: 'AE',\n  3756934: 'LEND',\n  9490820: 'KEY',\n  9622452: 'LET',\n  49681: 'SNT',\n  1712771: 'FUEL',\n  8520497: 'MTX',\n  6771938: 'DEW',\n  49653: 'BTC',\n}\nconst RED_COLOR = '#ea2870'\nconst GREEN_COLOR = '#70a700'\n\nclass App extends Component {\n\n  state = {\n    isLoading: false,\n    priceList: {},\n    records: []\n  }\n\n  componentDidMount() {\n    const  _this = this\n    this.fetchExchangeRecords().then(res => {\n      const data = res.data\n      localStorage.setItem('data', JSON.stringify(data))\n      _this.setState({\n        records: data\n      })\n      _this.syncTicker()\n    })\n\n    //this.login()\n    this.handleKeyboard()\n  }\n\n  handleKeyboard(){\n    const _this = this\n    document.body.addEventListener('keydown', function(e) {\n      if (e.which === 16) {\n        _this.multiAction = true\n      }\n    })\n    document.body.addEventListener('keyup', function(e) {\n      if (e.which === 16) {\n        _this.multiAction = false\n      }\n    })\n  }\n\n  syncTicker(ids) {\n    const _this = this\n    const ws = new WebSocket('wss://ws.cn-east.mytokenapi.com/ticker')\n    ws.onmessage = function(e) {\n      const data = JSON.parse(e.data)\n      const info = data.data\n      if (info && info.tick) {\n        const priceList = _this.state.priceList\n        priceList[info.tick.symbol] = {\n          price: info.tick.price,\n          change: info.tick.percent_change_24h\n        }\n        _this.setState({\n          priceList\n        })\n      }\n    }\n    ws.onopen = function() {\n      ws.send(\n        JSON.stringify({\n          event:\"ticker\",\n          params:{\n            ids: Object.keys(TOKENS).map(id => +id)\n          }\n        })\n      )\n    }\n  }\n\n  fetchExchangeRecords() {\n    return fetch('https://www.easy-mock.com/mock/59d892fd9d342f449f303370/app/records').then(res => res.json())\n  }\n\n  filterData = (index) => {\n    const data = this.state.records\n    if (data[index][4] !== false) {\n      data[index][4] = false\n    } else {\n      data[index][4] = true\n    }\n\n    this.setState({\n      records: data\n    }) \n  }\n\n  checkAll = () => {\n    const data = this.state.records\n    data.forEach(r => {\n      r[4] = true\n    })\n    this.setState({\n      records: data\n    })\n  }\n\n  render() {\n    const _this = this\n    const { priceList, records } = this.state\n    let remain = 0\n    const assetsExchanged = {}\n    records.forEach((data, index) => {\n    \n      if (data[4] === false) {\n        return\n      }\n      remain += parseInt(data[1])\n\n      // 如果有兑换记录\n      if (data[2]) {\n        const res = data[2].split(/\\d+/)\n        //const isAdd = res[0] === '+'\n        const tokenName = res[1]\n        const amount = parseInt(data[2])\n        if (typeof assetsExchanged[tokenName] === 'undefined') {\n          assetsExchanged[tokenName] = amount\n        } else {\n          assetsExchanged[tokenName] = assetsExchanged[tokenName] + amount\n        }\n        if (assetsExchanged[tokenName] === 0) {\n          records.forEach((r, i) => {\n            let x = r[2].split(/\\d+/)\n            if (i <= index && res[1] === x[1]) {\n              r.completed = true\n            }\n          })\n        }\n      }\n    })\n\n    let tbenefit = 0\n\n    const rows = records.map((data, index) => {\n      const res = data[2].split(/\\d+/)\n      const tokenName = res[1]\n      const amount = parseInt(data[2])\n      let amountToAE = ''\n      if (priceList[tokenName] && priceList.AE) {\n        amountToAE = parseInt((Math.abs(amount) * priceList[tokenName].price)/priceList.AE.price)\n      }\n      const benefit = amountToAE && !data.completed ? (data[1] < 0 && amountToAE - Math.abs(data[1]) > 0  ? '+' : '') + (amountToAE - Math.abs(data[1])) : ''\n      if (benefit) {\n        tbenefit += parseInt(benefit)\n      }\n      return (\n      <tr key={index}>\n        <td>{data[0]}</td>\n        <td>{data[1]}</td>\n        <td title={amountToAE ? `≈${amountToAE}AE` : ''}>{data[2]}</td>\n        <td>\n          <span style={{paddingLeft: '3px', color: data[1] < 0 && amountToAE - Math.abs(data[1]) > 0  ? GREEN_COLOR : RED_COLOR}}>\n            { benefit }\n          </span>\n          <CheckBox  checked={data[4] !== false ? true: false} onClick={() => _this.filterData(index)} />\n        </td>\n        <td>{data[3]}</td>\n    </tr>)})\n\n    let exchangedValue = 0\n    let priceSyncCount = 0\n    let needPrice = 0\n    Object.keys(assetsExchanged).forEach(tokenSymbol => {\n      if (assetsExchanged[tokenSymbol] > 0) {\n        needPrice +=1\n        if (this.state.priceList[tokenSymbol]) {\n          exchangedValue += assetsExchanged[tokenSymbol] * this.state.priceList[tokenSymbol].price\n          priceSyncCount += 1\n        }\n      }\n    })\n\n    const priceSyncOK = priceSyncCount === needPrice\n    const canShowPrice = priceList.AE && priceSyncOK\n    //const btc = priceList.BTC && canShowPrice ? (exchangedValue + remain * priceList.AE)/priceList.BTC : ''\n\n    window.assetsExchanged = assetsExchanged\n    window.records = records\n    return (\n      <div className=\"App\">\n        {/* <div className=\"login\">\n          <input type=\"password\" placeholder=\"请输入密码\" />\n        </div> */}\n        <div className=\"App-header\">\n          <h2>统计</h2>\n        </div>\n        <div className=\"container\">\n        <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" width=\"88%\" align=\"center\" className=\"exchange-list\">\n          <colgroup>\n            <col />\n            <col />\n            <col />\n            <col />\n            <col />\n          </colgroup>\n          <thead>\n            <tr>\n              <th width=\"18%\">DATE</th>\n              <th width=\"20%\">AE</th>\n              <th width=\"20%\">TO TOKEN</th>\n              <th width=\"22%\">CK ALL<CheckBox checked={true} onClick={this.checkAll} /></th>\n              <th width=\"20%\">NOTE</th>\n            </tr>\n          </thead>\n          <tbody>\n            { rows }\n            <tr>\n              <td>SUM</td>\n              <td className=\"ae-total\"><b>{remain}</b> AE</td>\n              <td><b>{canShowPrice ? parseInt(exchangedValue/priceList.AE.price) : <Loading />}</b> AE</td>\n              <td><b>{canShowPrice ? \n                (remain + parseInt(exchangedValue/priceList.AE.price)) + ' (' + tbenefit + ')'\n                :\n                 <Loading />\n                 /*\n                 // 总收益\n                 (remain + parseInt(exchangedValue/this.state.priceList.AE.price) - DEFAULT_AMOUNT)\n                 */\n              }</b> AE</td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h2>资产</h2>\n        <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" width=\"88%\" align=\"center\" className=\"exchangedAssets\">\n            <thead>\n              <tr>\n                <th width=\"18%\">TOKEN</th>\n                <th width=\"20%\">CHANGE(24H)</th>\n                <th width=\"20%\">PRICE</th>                \n                <th width=\"22%\">AMOUNT</th>\n                <th width=\"20%\">BANLANCE</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                Object.keys(assetsExchanged).map(token => {\n                    return assetsExchanged[token] > 0 ? <tr key={token}><td>{token}</td><td>{priceList[token] ? <PriceView price={priceList[token].change} /> : <Loading />}</td><td>{ priceList[token] ? '￥' + priceList[token].price.toFixed(5) : <Loading /> }</td><td>{assetsExchanged[token]}</td><td>{priceList[token] ? '￥' + parseInt(priceList[token].price.toFixed(5) * assetsExchanged[token]) : <Loading />}</td></tr> : null\n                  })\n              }\n              <tr>\n                <td>AE</td><td>{priceList.AE ? <PriceView price={priceList.AE.change} /> : <Loading />}</td><td>{ priceList.AE ? '￥' + priceList.AE.price.toFixed(5) : <Loading /> }</td><td>{ remain }</td><td>{priceList.AE ? '￥' + parseInt(priceList.AE.price.toFixed(5) * remain) : <Loading />}</td>\n              </tr>\n            </tbody>\n        </table>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CheckBox = ({checked, onClick = ()=> {}}) => {\n  return (\n    checked ? \n      <span className=\"ui-checkbox\" select=\"true\" onClick={onClick}></span>\n      :\n      <span className=\"ui-checkbox\" onClick={onClick}></span>\n    )\n}\n\nconst PriceView = ({price}) => {\n  return <span style={{color: +price < 0 ? RED_COLOR : GREEN_COLOR}}>{ price }%</span>\n}\n\nconst Loading = () => (\n  <div className=\"loadEffect\">\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}